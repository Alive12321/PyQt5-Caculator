# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '计算器2.0.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys
from PyQt5 import QtGui, QtCore, QtWidgets
from PyQt5.QtWidgets import *
from PyQt5 import QtWidgets
from math import sin,cos,tan,log,exp,e,pi

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(800, 600)
        font = QtGui.QFont()
        font.setFamily("华文行楷")
        font.setPointSize(10)
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.centralwidget.setFont(font)
        self.centralwidget.setObjectName("centralwidget")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(30, 10, 731, 141))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(20)
        self.textBrowser.setFont(font)
        self.textBrowser.setObjectName("textBrowser")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(60, 170, 671, 381))
        self.widget.setObjectName("widget")
        self.gridLayout = QtWidgets.QGridLayout(self.widget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.Exit = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.Exit.setFont(font)
        self.Exit.setObjectName("Exit")
        self.gridLayout.addWidget(self.Exit, 0, 0, 1, 1)
        self.Clear = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.Clear.setFont(font)
        self.Clear.setObjectName("Clear")
        self.gridLayout.addWidget(self.Clear, 0, 1, 1, 1)
        self.Delete = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.Delete.setFont(font)
        self.Delete.setObjectName("Delete")
        self.gridLayout.addWidget(self.Delete, 0, 2, 1, 1)
        self.log = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.log.setFont(font)
        self.log.setObjectName("log")
        self.gridLayout.addWidget(self.log, 0, 3, 1, 1)
        self.left = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.left.setFont(font)
        self.left.setObjectName("left")
        self.gridLayout.addWidget(self.left, 0, 4, 1, 1)
        self.one = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.one.setFont(font)
        self.one.setObjectName("one")
        self.gridLayout.addWidget(self.one, 1, 0, 1, 1)
        self.two = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.two.setFont(font)
        self.two.setObjectName("two")
        self.gridLayout.addWidget(self.two, 1, 1, 1, 1)
        self.three = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.three.setFont(font)
        self.three.setObjectName("three")
        self.gridLayout.addWidget(self.three, 1, 2, 1, 1)
        self.sin = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.sin.setFont(font)
        self.sin.setObjectName("sin")
        self.gridLayout.addWidget(self.sin, 1, 3, 1, 1)
        self.right = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.right.setFont(font)
        self.right.setObjectName("right")
        self.gridLayout.addWidget(self.right, 1, 4, 1, 1)
        self.four = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.four.setFont(font)
        self.four.setObjectName("four")
        self.gridLayout.addWidget(self.four, 2, 0, 1, 1)
        self.five = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.five.setFont(font)
        self.five.setObjectName("five")
        self.gridLayout.addWidget(self.five, 2, 1, 1, 1)
        self.six = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.six.setFont(font)
        self.six.setObjectName("six")
        self.gridLayout.addWidget(self.six, 2, 2, 1, 1)
        self.cos = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.cos.setFont(font)
        self.cos.setObjectName("cos")
        self.gridLayout.addWidget(self.cos, 2, 3, 1, 1)
        self.tan = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.tan.setFont(font)
        self.tan.setObjectName("tan")
        self.gridLayout.addWidget(self.tan, 2, 4, 1, 1)
        self.seven = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.seven.setFont(font)
        self.seven.setObjectName("seven")
        self.gridLayout.addWidget(self.seven, 3, 0, 1, 1)
        self.eight = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.eight.setFont(font)
        self.eight.setObjectName("eight")
        self.gridLayout.addWidget(self.eight, 3, 1, 1, 1)
        self.nine = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.nine.setFont(font)
        self.nine.setObjectName("nine")
        self.gridLayout.addWidget(self.nine, 3, 2, 1, 1)
        self.pow = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.pow.setFont(font)
        self.pow.setObjectName("pow")
        self.gridLayout.addWidget(self.pow, 3, 3, 1, 1)
        self.exp = QtWidgets.QPushButton(self.widget)
        self.exp.setObjectName("exp")
        self.gridLayout.addWidget(self.exp, 3, 4, 1, 1)
        self.add = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.add.setFont(font)
        self.add.setObjectName("add")
        self.gridLayout.addWidget(self.add, 4, 0, 1, 1)
        self.zero = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.zero.setFont(font)
        self.zero.setObjectName("zero")
        self.gridLayout.addWidget(self.zero, 4, 1, 1, 1)
        self.dot = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.dot.setFont(font)
        self.dot.setObjectName("dot")
        self.gridLayout.addWidget(self.dot, 4, 2, 1, 1)
        self.mod = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.mod.setFont(font)
        self.mod.setObjectName("mod")
        self.gridLayout.addWidget(self.mod, 4, 3, 1, 1)
        self.Pi = QtWidgets.QPushButton(self.widget)
        self.Pi.setObjectName("Pi")
        self.gridLayout.addWidget(self.Pi, 4, 4, 1, 1)
        self.minus = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.minus.setFont(font)
        self.minus.setObjectName("minus")
        self.gridLayout.addWidget(self.minus, 5, 0, 1, 1)
        self.mutiply = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.mutiply.setFont(font)
        self.mutiply.setObjectName("mutiply")
        self.gridLayout.addWidget(self.mutiply, 5, 1, 1, 1)
        self.divide = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.divide.setFont(font)
        self.divide.setObjectName("divide")
        self.gridLayout.addWidget(self.divide, 5, 2, 1, 1)
        self.equal = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.equal.setFont(font)
        self.equal.setObjectName("equal")
        self.gridLayout.addWidget(self.equal, 5, 3, 1, 1)
        self.ee = QtWidgets.QPushButton(self.widget)
        self.ee.setObjectName("ee")
        self.gridLayout.addWidget(self.ee, 5, 4, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 24))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "计算器"))
        self.Exit.setText(_translate("MainWindow", "Exit"))
        self.Clear.setText(_translate("MainWindow", "Clear"))
        self.Delete.setText(_translate("MainWindow", "Delete"))
        self.log.setText(_translate("MainWindow", "log"))
        self.left.setText(_translate("MainWindow", "("))
        self.one.setText(_translate("MainWindow", "1"))
        self.two.setText(_translate("MainWindow", "2"))
        self.three.setText(_translate("MainWindow", "3"))
        self.sin.setText(_translate("MainWindow", "sin"))
        self.right.setText(_translate("MainWindow", ")"))
        self.four.setText(_translate("MainWindow", "4"))
        self.five.setText(_translate("MainWindow", "5"))
        self.six.setText(_translate("MainWindow", "6"))
        self.cos.setText(_translate("MainWindow", "cos"))
        self.tan.setText(_translate("MainWindow", "tan"))
        self.seven.setText(_translate("MainWindow", "7"))
        self.eight.setText(_translate("MainWindow", "8"))
        self.nine.setText(_translate("MainWindow", "9"))
        self.pow.setText(_translate("MainWindow", "^"))
        self.exp.setText(_translate("MainWindow", "exp"))
        self.add.setText(_translate("MainWindow", "+"))
        self.zero.setText(_translate("MainWindow", "0"))
        self.dot.setText(_translate("MainWindow", "."))
        self.mod.setText(_translate("MainWindow", "%"))
        self.Pi.setText(_translate("MainWindow", "Pi"))
        self.minus.setText(_translate("MainWindow", "-"))
        self.mutiply.setText(_translate("MainWindow", "*"))
        self.divide.setText(_translate("MainWindow", "/"))
        self.equal.setText(_translate("MainWindow", "="))
        self.ee.setText(_translate("MainWindow", "e"))


class Stack:
    def __init__(self):
        self.items = []

    def isEmpty(self):
        return self.items == []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        return self.items.pop()

    def peek(self):
        return self.items[len(self.items) - 1]

    def size(self):
        return len(self.items)


class Friendship(QMainWindow, Ui_MainWindow):
    def __init__(self):
        super(Friendship, self).__init__()
        self.setupUi(self)
        self.Input=[]
        self.lis=[]
        self.str=""
        self.result=0
        self.pi=3.1415926
        self.e=2.7182818
        self.connecter()
        self.show()


    def connecter(self):
        self.one.clicked.connect(lambda:self._one())
        self.two.clicked.connect(lambda:self._two())
        self.three.clicked.connect(lambda:self._three())
        self.four.clicked.connect(lambda:self._four())
        self.five.clicked.connect(lambda:self._five())
        self.six.clicked.connect(lambda:self._six())
        self.seven.clicked.connect(lambda:self._seven())
        self.eight.clicked.connect(lambda:self._eight())
        self.nine.clicked.connect(lambda:self._nine())
        self.zero.clicked.connect(lambda:self._zero())
        self.pow.clicked.connect(lambda:self._pow())
        self.add.clicked.connect(lambda:self._add())
        self.minus.clicked.connect(lambda:self._minus())
        self.mutiply.clicked.connect(lambda:self._mutiply())
        self.divide.clicked.connect(lambda:self._divide())
        self.dot.clicked.connect(lambda:self._dot())
        self.mod.clicked.connect(lambda:self._mod())
        self.cos.clicked.connect(lambda:self._cos())
        self.log.clicked.connect(lambda:self._log())
        self.sin.clicked.connect(lambda:self._sin())
        self.Delete.clicked.connect(lambda:self._Delete())
        self.Clear.clicked.connect(lambda:self._Clear())
        self.tan.clicked.connect(lambda: self._tan())
        self.left.clicked.connect(lambda: self._left())
        self.right.clicked.connect(lambda: self._right())
        self.ee.clicked.connect(lambda: self._ee())
        self.Pi.clicked.connect(lambda: self._Pi())
        self.exp.clicked.connect(lambda: self._exp())
        self.equal.clicked.connect(self._equal)
        self.equal.clicked.connect(self.manage)
        self.Exit.clicked.connect(lambda: sys.exit())


    def _ee(self):
        self.Input.append(str("e"))
        self.textBrowser.setText(''.join(self.Input))
    def _tan(self):
        self.Input.append("tan(")
        self.textBrowser.setText(''.join(self.Input))
    def _exp(self):
        self.Input.append("exp(")
        self.textBrowser.setText(''.join(self.Input))
    def _Pi(self):
        self.Input.append("Pi")
        self.textBrowser.setText(''.join(self.Input))
    def _right(self):
        self.Input.append(")")
        self.textBrowser.setText(''.join(self.Input))
    def _left(self):
        self.Input.append("(")
        self.textBrowser.setText(''.join(self.Input))
    def _one(self):
        self.Input.append(str(1))
        self.textBrowser.setText(''.join(self.Input))
    def _two(self):
        self.Input.append(str(2))
        self.textBrowser.setText(''.join(self.Input))
    def _three(self):
        self.Input.append(str(3))
        self.textBrowser.setText(''.join(self.Input))
    def _four(self):
        self.Input.append(str(4))
        self.textBrowser.setText(''.join(self.Input))
    def _five(self):
        self.Input.append(str(5))
        self.textBrowser.setText(''.join(self.Input))
    def _six(self):
        self.Input.append(str(6))
        self.textBrowser.setText(''.join(self.Input))
    def _seven(self):
        self.Input.append(str(7))
        self.textBrowser.setText(''.join(self.Input))
    def _eight(self):
        self.Input.append(str(8))
        self.textBrowser.setText(''.join(self.Input))
    def _nine(self):
        self.Input.append(str(9))
        self.textBrowser.setText(''.join(self.Input))
    def _zero(self):
        self.Input.append(str(0))
        self.textBrowser.setText(''.join(self.Input))
    def _add(self):
        self.Input.append(str("+"))
        self.textBrowser.setText(''.join(self.Input))
    def _minus(self):
        self.Input.append(str("-"))
        self.textBrowser.setText(''.join(self.Input))
    def _mutiply(self):
        self.Input.append(str("*"))
        self.textBrowser.setText(''.join(self.Input))
    def _divide(self):
        self.Input.append(str("/"))
        self.textBrowser.setText(''.join(self.Input))
    def _mod(self):
        self.Input.append(str("%"))
        self.textBrowser.setText(''.join(self.Input))
    def _pow(self):
        self.Input.append(str("^"))
        self.textBrowser.setText(''.join(self.Input))
    def _sin(self):
        self.Input.append(str("sin("))
        self.textBrowser.setText(''.join(self.Input))
    def _cos(self):
        self.Input.append(str("cos("))
        self.textBrowser.setText(''.join(self.Input))
    def _log(self):
        self.Input.append(str("log("))
        self.textBrowser.setText(''.join(self.Input))
    def _Clear(self):
        self.Input=[]
        self.lis = []
        self.str = ""
        self.textBrowser.clear()
    def _Delete(self):
        self.Input = self.Input[:len(self.Input) - 1]
        self.textBrowser.setText(''.join(self.Input))
    def _equal(self):
        self.Input.append(str("="))
        self.textBrowser.setText(''.join(self.Input))
    def _dot(self):
        self.Input.append(str("."))
        self.textBrowser.setText(''.join(self.Input))

    def manage(self):
        li = self.Input
        self.lis = []
        l = 0
        r = 0
        for item in li:
            if (item.isdigit()):
                r += 1
            elif(item=="."):
                r+=1
            else:
                if (l < r):
                    self.lis.append(float(''.join(li[l:r])))
                    self.str=self.str+''.join(li[l:r])
                    l = r
                self.lis.append(item)
                self.str = self.str +item
                print(self.lis)
                l+=1
                r=l
        self.calcu()
    def calcu(self):
        print(self.str)
        self.str=self.str.replace('Pi','pi')
        self.result=eval(self.str[:len(self.str)-1].replace('^','**'))
        print(self.result)
        self._Clear()
        self.Input.append(str(self.result))
        self.textBrowser.setText(''.join(self.Input))


def main():
    app = QApplication(sys.argv)
    w = Friendship()
    w.show()
    sys.exit(app.exec_())

main()